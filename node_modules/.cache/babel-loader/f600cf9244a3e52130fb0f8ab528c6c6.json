{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Q\\\\Desktop\\\\auth_weatherApp-master\\\\src\\\\components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport Form from './Form';\nimport Form2 from './form2';\nimport Weather from './Weather';\nimport Logout from './Logout';\nconst openWeatherApiKey = 'c792484ade42380886f51003cfcaf04d';\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: '',\n      temp: '',\n      pressure: '',\n      wind: '',\n      error: '',\n      city2: '',\n      temp2: '',\n      pressure2: '',\n      wind2: '',\n      error2: ''\n    };\n\n    this.gettingForecast = async event => {\n      event.preventDefault();\n      var city = event.target.elements.city.value;\n\n      if (city) {\n        const weatherApiLink = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&mode=json&appid=${openWeatherApiKey}`);\n        const data = await weatherApiLink.json();\n        console.log(data);\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          pressure: data.main.pressure,\n          wind: data.wind.speed,\n          error: ''\n        });\n      } else {\n        this.setState({\n          city: '',\n          temp: '',\n          pressure: '',\n          wind: '',\n          error: 'Enter city!'\n        });\n      }\n    };\n\n    this.gettingForecast2 = async event => {\n      event.preventDefault();\n      var city = event.target.elements.city.value;\n\n      if (city) {\n        const weatherApiLink = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&mode=json&appid=${openWeatherApiKey}`);\n        const data = await weatherApiLink.json();\n        console.log(data);\n        this.setState({\n          temp2: data.main.temp,\n          city2: data.name,\n          pressure2: data.main.pressure,\n          wind2: data.wind.speed,\n          error2: ''\n        });\n      } else {\n        this.setState({\n          city2: '',\n          temp2: '',\n          pressure2: '',\n          wind2: '',\n          error2: 'Enter city!'\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Logout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      weatherMethod: this.gettingForecast,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      pressure: this.state.pressure,\n      wind: this.state.wind,\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form2, {\n      weatherMethod2: this.gettingForecast2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      pressure: this.state.pressure,\n      wind: this.state.wind,\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/Q/Desktop/auth_weatherApp-master/src/components/Main.js"],"names":["React","Component","Form","Form2","Weather","Logout","openWeatherApiKey","Main","state","city","temp","pressure","wind","error","city2","temp2","pressure2","wind2","error2","gettingForecast","event","preventDefault","target","elements","value","weatherApiLink","fetch","data","json","console","log","setState","main","name","speed","gettingForecast2","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport Form from './Form'\nimport Form2 from './form2'\nimport Weather from './Weather'\nimport Logout from './Logout'\n\nconst openWeatherApiKey = 'c792484ade42380886f51003cfcaf04d';\n\nclass Main extends Component {\n\n    state = {\n      city: '',\n      temp: '',\n      pressure: '',\n      wind: '',\n      error: '',\n      city2: '',\n      temp2: '',\n      pressure2: '',\n      wind2: '',\n      error2: ''\n    }\n\n  gettingForecast = async (event) => {\n    event.preventDefault();\n    var city = event.target.elements.city.value;\n\n  if(city) {\n\n      const weatherApiLink = await \n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&mode=json&appid=${openWeatherApiKey}`);\n      const data = await weatherApiLink.json();\nconsole.log(data)\n      this.setState({\n        temp: data.main.temp,\n        city: data.name,\n        pressure: data.main.pressure,\n        wind: data.wind.speed,\n        error: ''\n      })\n    } else {\n      this.setState({\n        city: '',\n        temp: '',\n        pressure: '',\n        wind: '',\n        error: 'Enter city!'\n      })\n    }\n    \n    \n  }\n  gettingForecast2 = async (event) => {\n    event.preventDefault();\n    var city = event.target.elements.city.value;\n\n  if(city) {\n\n      const weatherApiLink = await \n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&mode=json&appid=${openWeatherApiKey}`);\n      const data = await weatherApiLink.json();\nconsole.log(data)\n      this.setState({\n        temp2: data.main.temp,\n        city2: data.name,\n        pressure2: data.main.pressure,\n        wind2: data.wind.speed,\n        error2: ''\n      })\n    } else {\n      this.setState({\n        city2: '',\n        temp2: '',\n        pressure2: '',\n        wind2: '',\n        error2: 'Enter city!'\n      })\n    }\n    \n    \n  }\n\n\n  render() {\n    return (\n      <div>\n        <Logout />\n        <Form weatherMethod={this.gettingForecast} />\n        <Weather \n          temp={this.state.temp}\n          city={this.state.city}\n          pressure={this.state.pressure}\n          wind={this.state.wind}\n          error={this.state.error}\n        />       \n        <Form2  weatherMethod2={this.gettingForecast2} />\n        <Weather \n          temp={this.state.temp}\n          city={this.state.city}\n          pressure={this.state.pressure}\n          wind={this.state.wind}\n          error={this.state.error}\n        />       \n      </div>\n      \n      \n        \n    );\n  }\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}